
import streamlit as st
import docx
from io import BytesIO

# Dicion√°rio com compet√™ncias e habilidades (resumido para exemplo)
competencias = {
    "CE1": {
        "descricao": "Analisar processos pol√≠ticos, econ√¥micos, sociais, ambientais e culturais nos √¢mbitos local, regional, nacional e mundial.",
        "habilidades": {
            "EM13CHS101": "Identificar, analisar e comparar diferentes fontes e narrativas expressas em diversas linguagens.",
            "EM13CHS102": "Analisar circunst√¢ncias hist√≥ricas de matrizes conceituais como etnocentrismo, racismo, etc.",
            "EM13CHS103": "Elaborar hip√≥teses e compor argumentos com base em dados e evid√™ncias.",
            "EM13CHS104": "Analisar objetos e vest√≠gios da cultura material e imaterial.",
            "EM13CHS105": "Criticar oposi√ß√µes dicot√¥micas como cidade/campo, civilizados/b√°rbaros, etc.",
            "EM13CHS106": "Utilizar linguagens cartogr√°fica e digital de forma cr√≠tica e √©tica."
        }
    },
    "CE2": {
        "descricao": "Analisar a forma√ß√£o de territ√≥rios e fronteiras, e o papel geopol√≠tico dos Estados-na√ß√µes.",
        "habilidades": {
            "EM13CHS201": "Analisar din√¢micas populacionais e mobilidades humanas.",
            "EM13CHS202": "Analisar impactos das tecnologias nas sociedades.",
            "EM13CHS203": "Comparar significados de territ√≥rio, fronteira e vazio.",
            "EM13CHS204": "Avaliar processos de ocupa√ß√£o e conflitos territoriais.",
            "EM13CHS205": "Analisar a produ√ß√£o de territorialidades contempor√¢neas.",
            "EM13CHS206": "Aplicar princ√≠pios geogr√°ficos na an√°lise da ocupa√ß√£o do espa√ßo."
        }
    },
    # Demais compet√™ncias podem ser adicionadas aqui da mesma forma
}

st.set_page_config(page_title="BNCC: Compet√™ncias e Habilidades", layout="centered")
st.title("üéì Seletor de Compet√™ncias e Habilidades - BNCC")
st.markdown("Escolha as compet√™ncias e as habilidades que deseja incluir no seu documento.")

escolhas = {}

# Interface de sele√ß√£o
for cod, comp in competencias.items():
    with st.expander(f"{cod} - {comp['descricao']}"):
        habilidades_escolhidas = st.multiselect(
            f"Selecione as habilidades para {cod}:",
            options=list(comp["habilidades"].keys()),
            format_func=lambda x: f"{x} - {comp['habilidades'][x]}"
        )
        if habilidades_escolhidas:
            escolhas[cod] = habilidades_escolhidas

# Fun√ß√£o para gerar o arquivo Word
def gerar_documento(selecionadas):
    doc = docx.Document()
    doc.add_heading("Compet√™ncias e Habilidades Selecionadas - BNCC", 0)

    for cod, habilidades in selecionadas.items():
        doc.add_heading(f"{cod} - {competencias[cod]['descricao']}", level=1)
        for hab in habilidades:
            desc = competencias[cod]['habilidades'][hab]
            doc.add_paragraph(f"{hab}: {desc}", style='List Bullet')

    buffer = BytesIO()
    doc.save(buffer)
    buffer.seek(0)
    return buffer

# Bot√£o para gerar e baixar o documento
if st.button("üìÑ Gerar Documento Word"):
    if escolhas:
        doc_file = gerar_documento(escolhas)
        st.download_button(
            label="üì• Baixar Documento",
            data=doc_file,
            file_name="competencias_habilidades_bncc.docx",
            mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        )
    else:
        st.warning("Por favor, selecione pelo menos uma habilidade.")
